# -*- coding: utf-8 -*-
"""lvadsusr180 final assessment lab3 clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f9CT9ky4jwVXJqmtVgie-yRT-Zf4r-HA
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.cluster import KMeans

df=pd.read_csv(r'https://raw.githubusercontent.com/Deepsphere-AI/LVA-Batch5-Assessment/main/customer_segmentation.csv')

df.head()

df.isnull().sum()

df.drop('ID',axis=1,inplace=True)

df['Income'].fillna(df['Income'].median(),inplace=True)

df['Dt_Customer']=pd.to_datetime(df['Dt_Customer'],format="%d-%m-%Y")

df['Education']=df['Education'].map({'Graduation':3, 'PhD':1, 'Master':2, '2n Cycle':3, 'Basic':3})

df['Marital_Status']=df['Marital_Status'].map({'Single':0, 'Together':1, 'Married':1, 'Divorced':0, 'Widow':0, 'Alone':0,
       'Absurd':0, 'YOLO':0})

df.head()

scaled_cols=['Income','MntWines','MntFruits','Recency','MntMeatProducts',
 'MntFishProducts',
 'MntSweetProducts',
 'MntGoldProds',
 'NumDealsPurchases',
 'NumWebPurchases',
 'NumCatalogPurchases',
 'NumStorePurchases',
 'NumWebVisitsMonth',]

df['Income']=df['Income'].astype('float32')

from sklearn.preprocessing import StandardScaler

ss=StandardScaler()
scaled_data=ss.fit_transform(df[scaled_cols])

feature_names=ss.get_feature_names_out()

df.drop(scaled_cols,axis=1)
df1=pd.DataFrame(columns=feature_names,data=scaled_data)
data=pd.concat([df,df1],axis=1)

inertia_score=[]
for i in range(1,8):
  kmeans=KMeans(n_clusters=i,random_state=42)
  kmeans.fit(scaled_data)
  inertia_score.append(kmeans.inertia_)

pd.DataFrame(range(1,8),inertia_score)

plt.figure(figsize=(15,8))
plt.plot(range(1,8),inertia_score,marker='o')
plt.show()

num_clusters = 4
kmeans = KMeans(n_clusters=num_clusters, random_state=42)
df['cluster'] = kmeans.fit_predict(scaled_data)

df.head()

plt.figure(figsize=(10,6))
sns.scatterplot(x='Income',y = 'Recency',hue='cluster',palette=['green','red','blue','black'],legend=True,data=df)
plt.xlabel("Annual Income")
plt.ylabel("Spending Score")
plt.show()

df.drop('Dt_Customer',axis=1,inplace=True)

from sklearn.metrics import silhouette_score


silhouette_avg = silhouette_score(df.drop('cluster',axis=1),df['cluster'] )

print("Silhouette Score:", silhouette_avg)

