# -*- coding: utf-8 -*-
"""lvadsusr_180_clustering_lab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ut_mnGDr813gFSvTxuaiMrnTOb6XDxd7
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

df=pd.read_csv(r'/content/Mall_Customers.csv',on_bad_lines='skip')

df.head()

df.shape

df.drop('CustomerID',axis=1,inplace=True)

df.isnull().sum()

df.duplicated().sum()

df['Genre']=df['Genre'].map({'Male':1,'Female':0})

df.rename({'Genre':'Gender'},axis=1,inplace=True)

df.describe()

df.dtypes

df.info()

for i in df.columns.tolist():
  sns.boxplot(data=df,x=i)
  plt.title(i)
  plt.show()

k=2

df.columns.tolist()

sns.scatterplot(data=df,x='Annual Income (k$)',y='Spending Score (1-100)')
plt.show()

sns.distplot(df['Annual Income (k$)'],kde=True)
plt.show()

from sklearn.preprocessing import StandardScaler

ss=StandardScaler()

df.head()

cols=['Annual Income (k$)',	'Spending Score (1-100)']
# df[cols]=ss.fit_transform(df[cols])

df.head()

scaled_features=ss.fit_transform(df[cols])

scaled_features

inertia_score=[]
for i in range(1,8):
    kmeans=KMeans(n_clusters=i,random_state=20)
    kmeans.fit(scaled_features)
    inertia_score.append(kmeans.inertia_)

pd.DataFrame({"cluster":range(1,8),"inertia_score":inertia_score})

"""from the elbow method it is understandable that cluster value 5 will give better clustring than any others."""

#plot the elbow curve
plt.figure(figsize=(15,8))
plt.plot(range(1,8),inertia_score,marker='o')
plt.show()

from sklearn.cluster import KMeans

num_clusters = 5
kmeans = KMeans(n_clusters=num_clusters, random_state=42)
df['cluster'] = kmeans.fit_predict(scaled_features)

df.head()

kmeans.labels_

"""the clustered group based on spending score and annual income"""

plt.figure(figsize=(10,6))
sns.scatterplot(x='Annual Income (k$)',y = 'Spending Score (1-100)',hue='cluster',palette=['green','red','blue','black','yellow'],legend=True,data=df)
plt.xlabel("Annual Income")
plt.ylabel("Spending Score")
plt.show()







