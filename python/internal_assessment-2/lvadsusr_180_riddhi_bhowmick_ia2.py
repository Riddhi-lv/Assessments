# -*- coding: utf-8 -*-
"""LVADSUSR_180 Riddhi Bhowmick ia2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QQPLY6hzpLKymR8fF76gttyIQUIsuXKO
"""



from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np

# q1
arr=np.array([1,2,3,4,5])
print("minimum:",np.min(arr))
print("max:",np.max(arr))
print("sum:",np.sum(arr))
print("mean:",np.mean(arr))
print("std:",np.std(arr))

# q2
health_data=np.array([[160,70,30],
                      [165,65,35],
                      [175,75,40]])
#normalization
std_deviation=np.std(health_data,axis=1)
mean=np.mean(health_data,axis=1)
normalized=health_data-mean/std_deviation
print(std_deviation)
print(mean)
print("normalized:",normalized)

student_data=np.array([[80,50,60,-1,20],
              [12,34,56,40,50],
              [78,67,-1,89,67]],dtype=float)

# q3
student_data1=np.array([[80,50,60,-1,20],
              [12,34,56,40,50],
              [78,67,-1,89,67]],dtype=float)
last_three1=student_data1[:,-3:]

nan_data1=np.where(last_three1!=-1,last_three1,np.nan)
print(np.nanmean(nan_data1,axis=1))

# q4
print(np.linspace(15,25,24))

# q5
daily_closing_price=np.array([100,102,98,105,107,110,108,112,115,118,120])
my_dict={"data":daily_closing_price}
df=pd.DataFrame(my_dict)
df['rolling']=df['data'].rolling(window=5).mean()
print(df)

#q6
random_data=np.random.rand(100,2)
mean_vector=[0,0]
covariance_matrix=[[1,0.5],[0.5,2]]
print(random_data)

#q7
properties_matrix=np.array([[1,2,3],
                            [4,5,6],
                             [7,8,9]
])
print(np.linalg.det(properties_matrix))

# q8
properties_matrix=np.array([[1,2,3],
                            [4,5,6],
                             [7,8,9]
])
boolean_matrix=np.array([
    [False,False,False],
    [False,True,True],
    [True,True,True]
    ])
print(properties_matrix[boolean_matrix])

#q9
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

df=pd.DataFrame(data)
print(df[(df['Age']<45) &(df['Department']!='HR')][['Name','City']])

# q10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
df=pd.DataFrame(data)
df2=pd.DataFrame(df.groupby(['Salesperson','Department'])['Sales'].aggregate(np.mean))
part_a=df2.sort_values(by='Sales',ascending=False)
df1=pd.DataFrame(df.groupby('Department')['Sales'].aggregate(np.mean))
part_b=df1.sort_values(by='Sales',ascending=False)
print("average sales per person",part_a)
print("---------")
print("rank by department on average sales",part_b)

# q11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
df=pd.DataFrame(data)
print(df[(df['Price']>df['Price'].mean()) & (df['Category']=='Fruit') &(df['Promotion']==False)])

#q12
employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
df1=pd.DataFrame(employee_data)
df2=pd.DataFrame(project_data)
print(pd.merge(df1,df2,on='Employee',how='left'))

# q13
df=pd.read_csv(r'/content/drive/MyDrive/dataset/Q13_sports_team_stats.csv')
df['win_Ratios']=df['Wins']/np.sum(df['Wins'])
df['average_scores']=(df['Wins']*3)/(df['GamesPlayed']*3)
df['strengths']=df['GamesPlayed']-df['Wins']
print(df['win_Ratios'])
print(df['average_scores'])
print(df['strengths'])

# q14
df=pd.read_csv(r'/content/drive/MyDrive/dataset/Q14_customer_purchases.csv')
k=df.groupby('CustomerID')['PurchaseAmount']
df1=pd.DataFrame(k)
print(df1)



df.head()

df.groupby('CustomerID')['PurchaseAmount']

# q15
df=pd.read_csv(r'/content/drive/MyDrive/dataset/Q15_student_grades.csv')
k=df.groupby('Subject')['Grade'].aggregate(np.mean)
df1=pd.DataFrame(k)
df1.sort_values(by='Grade',ascending=False)

df.head()

k=df.groupby('Subject')['Grade'].aggregate(np.mean)

df1=pd.DataFrame(k)

df1.sort_values(by='Grade',ascending=False)



